# Generated by Django 4.2.1 on 2023-05-20 13:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256)),
            ],
            options={
                "verbose_name_plural": "Companies",
            },
        ),
        migrations.CreateModel(
            name="PaymentVoucher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("Income", "Income"), ("Expense", "Expense")],
                        max_length=50,
                    ),
                ),
                ("approved", models.BooleanField(default=False)),
                ("request_by", models.CharField(blank=True, max_length=50, null=True)),
                ("payee", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "cheque_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "account_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Yonna Islamic Microfinance",
                                "Yonna Islamic Microfinance",
                            ),
                            ("Ecobank", "Ecobank"),
                            ("GT-Bank", "GT-Bank"),
                            ("Access Bank", "Access Bank"),
                            ("Trust Bank", "Trust Bank"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "item_one",
                    models.CharField(default="", max_length=120, verbose_name="Item 1"),
                ),
                (
                    "item_one_quantity",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_one_unit_price",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_one_total_price",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_two",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 2",
                    ),
                ),
                (
                    "item_two_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_two_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_two_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_three",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 3",
                    ),
                ),
                (
                    "item_three_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_three_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_three_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_four",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 4",
                    ),
                ),
                (
                    "item_four_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_four_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_four_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_five",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 5",
                    ),
                ),
                (
                    "item_five_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_five_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_five_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_six",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 6",
                    ),
                ),
                (
                    "item_six_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_six_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_six_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_seven",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 7",
                    ),
                ),
                (
                    "item_seven_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_seven_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_seven_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_eight",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 8",
                    ),
                ),
                (
                    "item_eight_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_eight_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_eight_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_nine",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 9",
                    ),
                ),
                (
                    "item_nine_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_nine_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_nine_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                (
                    "item_ten",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Item 10",
                    ),
                ),
                (
                    "item_ten_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "item_ten_unit_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Unit Price (D)",
                    ),
                ),
                (
                    "item_ten_total_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Entry Total (D)",
                    ),
                ),
                ("total_amount", models.FloatField(default=0)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Accounts Desk", "Accounts Desk"),
                            ("Audit Level", "Audit Level"),
                            ("Management Level", "Management Level"),
                            ("Final Review", "Final Review"),
                            ("Approved", "Approved"),
                            ("On Hold", "On Hold"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cash", "Cash"),
                            ("Bank Transfer", "Bank Transfer"),
                            ("Cheque", "Cheque"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "pv_id",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracker.category",
                    ),
                ),
                (
                    "prepared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviewed_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
